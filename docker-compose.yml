version: '3.1'

services:
  s_rabbitmq:
    hostname: my-rabbitmq
    image: rabbitmq:3.11-management
    container_name: c_rabbitmq_server
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - n_backend


  s_consumer:
      build:
        context: ./rabbitmq_consumer
      container_name: c_rabbitmq_consumer
      environment:
        - HOST=s_rabbitmq
        - QUEUE=hello
        - QUEUE_2=hello2
        - DB_NAME=recognized.db
      volumes: 
        - /tmp/watchdir:/var/watchdir
        - /tmp/destination:/var/destination
        - ./app_docs/data/sqlite:/var/data
      networks:
        - n_backend 
      restart: on-failure
      depends_on:
        - s_rabbitmq

  s_publisher:
    build:
      context: ./rabbitmq_publisher
    container_name: c_rabbitmq_publisher
    environment:
      - HOST=s_rabbitmq
      - QUEUE=hello
    ports:
      - 5000:5000
    networks:
      - n_backend
    restart: on-failure
    depends_on:
      - s_consumer


  s_file_watcher:
    build:
      context: ./inotifywait_watcher
    container_name: c_inotify_wacther
    environment:
      - REMOTE_URL=s_publisher:5000/post
    volumes: 
      - /tmp/watchdir:/var/watchdir
      - /tmp/destination:/var/destination
    networks:
      - n_backend
    restart: on-failure
    depends_on:
      - s_publisher

networks:
  n_backend:
    driver: bridge

  # s_mongo:
  #   image: mongo
  #   container_name: c_mongo_server
  #   restart: always
  #   environment:
  #    MONGO_INITDB_ROOT_USERNAME: root
  #    MONGO_INITDB_ROOT_PASSWORD: hello
  #   volumes:
  #     - april_rain_db:/data/db
  #   networks:
  #     - n_backend

  # s_mongo_client:
  #   build:
  #     context: ./mongodb_client
  #   container_name: c_mongodb_client
  #   environment:
  #     - HOST=s_rabbitmq
  #     - QUEUE=hello2
  #     - DB_NANE=april_rain_db
  #     - DB=mongodb://root:hello@s_mongo:27017
  #   restart: on-failure
  #   networks:
  #     - n_backend
  #   depends_on:
  #     - s_rabbitmq


  # s_mongo-express:
  #   image: mongo-express
  #   container_name: c_mongo_express
  #   ports:
  #     - 8081:8081
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: root
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: hello
  #     ME_CONFIG_MONGODB_URL: mongodb://root:hello@s_mongo:27017/
  #   networks:
  #     - n_backend
  #   restart: always
  #   depends_on:
  #     - s_mongo


  
# volumes:
#   april_rain_db:

